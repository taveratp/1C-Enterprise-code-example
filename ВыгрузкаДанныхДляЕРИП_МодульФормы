
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Об								= РеквизитФормыВЗначение("Объект");
	Макет							= Об.ПолучитьМакет("СхемаКомпоновки");
	
	Настройки						= Макет.НастройкиПоУмолчанию;
	Попытка
		Если НЕ ПустаяСтрока(Об.КомпоновщикНастроекСтрока) Тогда
			Настройки				= ЗначениеИзСтрокиВнутр(Об.КомпоновщикНастроекСтрока);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	АдресСхемыКомпоновкиДанных 		= ПоместитьВоВременноеХранилище(Макет, УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
КонецПроцедуры

&НаСервере
Функция КомпоновщикНастроекПользовательскиеНастройкиПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	
	НастройкиКомпоновщика 			= КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрыНастройки 				= НастройкиКомпоновщика.ПараметрыДанных;
	ЗначениеПараметра 				= ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодАнализа"));
	Объект.ДатаНачисления			= ЗначениеПараметра.Значение.ДатаОкончания;
	
	Возврат ЗначениеВСтрокуВнутр(КомпоновщикНастроек.ПолучитьНастройки());
	
КонецФункции

&НаКлиенте
Процедура КомпоновщикНастроекПользовательскиеНастройкиПриИзменении(Элемент)
	
	Объект.КомпоновщикНастроекСтрока	 = КомпоновщикНастроекПользовательскиеНастройкиПриИзмененииНаСервере();
	ЭтаФорма.Модифицированность			 = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройкиНаСервере()
	// Вставить содержимое обработчика.
	
	Об	 							= РеквизитФормыВЗначение("Объект");
	
	Макет							= Об.ПолучитьМакет("СхемаКомпоновки");
	
	Настройки						= Макет.НастройкиПоУмолчанию;
	
	АдресСхемыКомпоновкиДанных 		= ПоместитьВоВременноеХранилище(Макет, УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);

	Объект.КомпоновщикНастроекСтрока= ЗначениеВСтрокуВнутр(КомпоновщикНастроек.ПолучитьНастройки());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройки(Команда)
	
	ОбновитьНастройкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФлажки(Команда)
	
	Для Каждого Строка Из Объект.Начисления Цикл
		
		Строка.Выгрузить 	= ?(Команда.Имя = "УстановитьФлажки", Истина, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Об								= РеквизитФормыВЗначение("Объект");
	Макет							= Об.ПолучитьМакет("СхемаКомпоновки");
	НастройкиКомпоновщика 			= КомпоновщикНастроек.ПолучитьНастройки();
	
	ДанныеРасшифровкиСКД 			= Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета 				= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных 			= КомпоновщикМакета.Выполнить(Макет, НастройкиКомпоновщика,ДанныеРасшифровкиСКД,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных 		= Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,,ДанныеРасшифровкиСКД, Истина);
	
	ПроцессорВывода 				= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Таблица 						= Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(Таблица);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Объект.Начисления.Загрузить(Таблица);
	
		
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	
	 ЗаполнитьНаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.РасчетныйСчет	= Объект.Организация.ОсновнойБанковскийСчет;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента 	= Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Общие проверки условий по датам.
	ТребуетсяВызовСервера 		= ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
	ТекущаяДатаДокумента);
	
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		//ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента 			= Объект.Дата;

	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ТекущаяДатаДокумента			= Объект.Дата;
	
КонецПроцедуры
